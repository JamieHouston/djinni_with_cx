// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#pragma once

#include "../cpp/client_interface.hpp"
#include "ClientInterface.h"
#include "ClientReturnedRecord.h"
#include "translation.h"
#include <functional>

namespace System {

template<> class CxInterfaceProxy<::cppns::ClientInterface> : public ::cppns::ClientInterface
{
public:
    CxInterfaceProxy(::System::Cxns::ClientInterface^ nativeRef)
    {
        native_call_nativeRef = [nativeRef]{ return nativeRef; };
    }
    ClientReturnedRecord get_record(int64_t, const std::string &, const std::experimental::optional<std::string> &) override
    {
        auto nativeRet = nativeRef()->GetRecord(transform<int64_t, int64_t>()(record_id), transform<std::string, Platform::String^>()(utf8string), transform<std::experimental::optional<std::string>, StringRef^>()(misc));
        return transform<::cppns::ClientReturnedRecord, ClientReturnedRecord^>()(nativeRet);
    }
    double identifier_check(const std::vector<uint8_t> &, int32_t, int64_t) override
    {
        auto nativeRet = nativeRef()->IdentifierCheck(transform<std::vector<uint8_t>, Platform::Array<uint8_t>^>()(data), transform<int32_t, int32_t>()(r), transform<int64_t, int64_t>()(jret));
        return transform<double, double>()(nativeRet);
    }
    std::string return_str() override
    {
        auto nativeRet = nativeRef()->ReturnStr();
        return transform<std::string, Platform::String^>()(nativeRet);
    }
    ::System::Cxns::ClientInterface^ nativeRef() { return native_call_nativeRef(); }
private:
    std::function<::System::Cxns::ClientInterface^()> native_call_nativeRef;
};

}  // namespace System
